# 场景
# 前端部署在网站根目录
# 页面上访问了域名为 be.dev.leezx.cn 的接口
# 此时会产生跨域问题

# # 一种方式是前后端资源直接整到一个域名
# # 那当然就不会存在跨域了
# server {
#   listen 80;
#   listen [::]:80;
#   server_name be.dev.leezx.cn;

#   location / {
#     root /usr/share/nginx/html;
#     index 2.cors.html;
#   }
#   location = /api {
#     proxy_pass http://localhost:9981;
#   }
# }
# 若想把前后端资源放在不同域名
# 则必须对后端资源作白名单处理
# =======================
# 以下这种配置，可以正确的将请求转发到 node，但是如果前后端域名不一致
# 还是会提示跨域
# ctx.set('access-control-allow-origin', '*')
server {
  listen 80;
  listen [::]:80;
  server_name dev.leezx.cn;

  location / {
    root /usr/share/nginx/html;
    index 2.cors.html;
  }

  location /api {
    # 重写请求，将正则匹配中的第一个分组的 path 拼接到真正的请求后面，并用 break 停止后续匹配
    # 例如 /api/getInfo => /getInfo
    rewrite ^/api/(.*)$ /$1 break;

    proxy_pass http://be.dev.leezx.cn;

    # 两个域名之间cookie的传递与回写
    proxy_cookie_domain be.dev.leezx.cn dev.leezx.cn;
    # 加上上面一行之后，即使 be.dev.leezx.cn 明确指定 domain 字段为 be 域名
    # Nginx 也会将 domain 重写为 dev.leezx.cn
  }
}

server {
  listen 80;
  listen [::]:80;
  server_name be.dev.leezx.cn;

  location /api {
    proxy_pass http://localhost:9981;
  }
}